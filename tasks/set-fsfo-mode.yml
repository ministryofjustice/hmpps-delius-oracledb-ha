      - name: Get Fast-Start Failover Status
        shell: |
              . ~/.bash_profile
              dgmgrl -silent / "show configuration;" | awk -F: '/Fast-Start Failover/{print $2}'
        register: get_fast_start_failover
        changed_when: false
        delegate_to: "{{ delegation_host }}"
      
      # Pre-requisite for enabling FSFO is for the databases to be in sync
      # Standby may be behind primary as it needs to catch up with redo generated by switch-clone,
      # so wait for all of this redo to be applied
      - name: Check Standby 1 is in the Data Guard Configuration
        shell: |
               . ~/.bash_profile
               dgmgrl / "show configuration" | grep "{{ hostvars[groups[ standby1 ][0]]['database_standby_unique'] | lower }}" | cat
        register: config_standby1
        changed_when: false

      # We require no data guard lag if enabling FSFO (irrelevant if disabling FSFO)
      - name: Wait for Data Guard Lag on Standby 1 to Drop to Zero
        shell: |
               . ~/.bash_profile
               dgmgrl / "show database {{  hostvars[groups[ standby1 ][0]]['database_standby_unique'] | lower }}"  | grep "Apply Lag:" | awk  '{print $3}'
        register: apply_lag
        when: 
           - high_availability_count | int >= 1
           - config_standby1 is search('.*Physical standby database.*')
           - not (fsfo_mode | default('disabled') | lower in ['observe','observer','disable','disabled'])
        changed_when: false
        until: apply_lag.stdout == '0'
        delay: 60
        retries: 60

      # By Now the Data Guard Lag on the (Optional) 2nd Standby should also have dropped to zero.  But we wait for this too in case it 
      # is slightly slower
      - name: Check Standby 2 is in the Data Guard Configuration
        shell: |
               . ~/.bash_profile
               dgmgrl / "show configuration" | grep "{{ hostvars[groups[ standby2 ][0]]['database_standby_unique'] | lower }}" | cat
        register: config_standby2
        changed_when: false
        when: 
           - high_availability_count | int == 2

      # We require no data guard lag if enabling FSFO (irrelevant if disabling FSFO)
      - name: Wait for Data Guard Lag on Standby 2 to Drop to Zero
        shell: |
               . ~/.bash_profile
               dgmgrl / "show database {{ hostvars[groups[ standby2 ][0]]['database_standby_unique'] | lower }}"  | grep "Apply Lag:" | awk  '{print $3}'
        register: apply_lag
        changed_when: false
        when: 
           - high_availability_count | int == 2
           - config_standby2 is search('.*Physical standby database.*')
           - not (fsfo_mode | default('disabled') | lower in ['observe','observer','disable','disabled'])
        until: apply_lag.stdout == '0'
        delay: 60
        retries: 60

      # Prepare for Mode Change if Needed
      - name: Disable Fast-Start Failover
        shell: |
               . ~/.bash_profile
               dgmgrl -silent / "disable fast_start failover"
        delegate_to: "{{ delegation_host }}"
        when:
            - ( get_fast_start_failover.stdout | trim ) != 'Disabled'
            - ( (get_fast_start_failover.stdout is search("Observe-Only Mode")) and (fsfo_mode | default('disabled') | lower in ['enable','enabled','disable','disabled']) )
              or ( (not get_fast_start_failover.stdout is search("Observe-Only Mode")) and (fsfo_mode | default('disabled') | lower in ['observe','observer','disable','disabled']) )
        retries: 3
        delay: 60

      # Accept both 'observe' or 'observer' as a valid mode
      - name: Enable Observe-Only Mode
        shell: |
              . ~/.bash_profile
              dgmgrl -silent / "enable fast_start failover observe only"
        delegate_to: "{{ delegation_host }}"
        when:
            - not get_fast_start_failover.stdout is search("Observe-Only Mode")
            - fsfo_mode | default('disabled') | lower in ['observe','observer']
        vars:
            ansible_aws_ssm_timeout: 60

      - name: Enable FSFO Mode
        shell: |
              . ~/.bash_profile
              dgmgrl -silent / "enable fast_start failover"
        delegate_to: "{{ delegation_host }}"
        when:
            - get_fast_start_failover.stdout is search("Observe-Only Mode") or get_fast_start_failover.stdout is search("Disabled")
            - fsfo_mode | default('disabled') | lower == 'enabled'
