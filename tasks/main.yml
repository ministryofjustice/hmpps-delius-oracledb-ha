---

# tasks file for hmpps-delius-oracledb-ha

- block:
    - name: (main) Only carry out ha tasks if high availability configured
      debug:
        msg: "No high availability database to be configured...exiting"
    - meta: end_play
  run_once: True
  when: high_availability_count is defined and high_availability_count==0
  tags: var

- name: (main/set-primary-config) Gather facts with dns filter
  setup:
    filter: ansible_dns
  tags: var

- name: (main/set-primary-config) Handle if using tag InventoryHost as the inventory hostname
  set_fact:
    standby_host_tns: "{{ standby_host | regex_replace('([^\\.]*).*$' ,'\\1') | regex_replace('^(.+)-((delius|mis|misboe|misdsd)-db-(1|2|3))$','\\2') }}.{{ simple_environment_name }}.{{ project_name }}.{{ ansible_dns.search[0] }}"
    primary_host_tns: "{{ primary_host | regex_replace('([^\\.]*).*$' ,'\\1') | regex_replace('^(.+)-((delius|mis|misboe|misdsd)-db-(1|2|3))$','\\2') }}.{{ simple_environment_name }}.{{ project_name }}.{{ ansible_dns.search[0] }}"
  tags: var

- name: (main) Load in our vars
  include_vars:
    file: main.yml
  no_log: true
  tags: always

- name: (main) Get our ec2 instance facts
  ec2_metadata_facts:
  register: ec2_metadata_facts
  no_log: true
  tags: always

- name: (main) Get the Dependencies Bucket ARN from Primary
  shell: . /etc/environment; echo $DEPENDENCIES_BUCKET_ARN
  register: dependencies_bucket_arn
  changed_when: false
  delegate_to: "{{ groups[primary][0] }}"
  when: inventory_hostname in groups[ standby ]
  tags: stand

- name: (main) Update the Dependency Bucket ARN in Standby Environment File
  lineinfile:
    path: /etc/environment
    regexp: 'export DEPENDENCIES_BUCKET_ARN=".*"'
    line: export DEPENDENCIES_BUCKET_ARN="{{ dependencies_bucket_arn.stdout }}"
  when: inventory_hostname in groups[ standby ]
  tags: stand  

- name: (main) Set up oracle specific variables
  block:
    - name: (main) Set up oracle grid home
      register: grid_home
      shell: "grep +ASM /etc/oratab | cut -d: -f2"
    - name: (main) Set up oracle database home
      register: oracle_home
      shell: "grep {{ database_primary_sid_name}} /etc/oratab | cut -d: -f2"
      run_once: True
    - set_fact:
        oracle_database_oracle_home: "{{ oracle_home.stdout }}"
        oracle_grid_oracle_home: "{{ grid_home.stdout }}"
        database_primary_orapwfile: "{{ oracle_home.stdout }}/dbs/orapw{{ database_primary_sid_name }}"
  tags: var

- name: (main) Set standby configuration parameters
  include: set-standby-config.yml
  when: inventory_hostname in groups[ standby ]
  tags: stand

- name: (main) Setup primary
  block:
    - name: (main) Configuration parameters
      include: set-primary-config.yml
    - name: (main) Database parameters
      include: set-primary-params.yml
  when: inventory_hostname in groups[ primary ]
  tags: prim

- name: (main) Restore primary to standby
  include: restore-primary-to-standby.yml
  tags: restore

- name: (main) Configure Oracle data guard broker
  include: set-primary-dgbroker.yml
  when: inventory_hostname in groups[ primary ]
  tags: dg

- name: (main) Setup taf service name
  include: set-taf-service.yml
  tags: taf
